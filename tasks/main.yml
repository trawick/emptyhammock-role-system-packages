---
- name: "Update apt cache"
  apt: update_cache=yes

- name: Make sure python-software-properties is installed before adding repos (Ubuntu 16.04)
  apt: pkg=python-software-properties state=present
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'xenial'

- name: Make sure software-properties-common is installed before adding repos (Ubuntu >= 18.04)
  apt: pkg=software-properties-common state=present
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release != 'xenial'

- name: Add ppa repo for certbot
  apt_repository: repo='ppa:certbot/certbot'
  register: certbot_repo
  when: ansible_distribution == "Ubuntu" and ansible_distribution_major_version < "20"

- name: Update apt cache for certbot repo
  apt: update_cache=yes
  when: certbot_repo.changed

- name: Add Nodesource apt key
  apt_key:
    url: https://keyserver.ubuntu.com/pks/lookup?op=get&fingerprint=on&search=0x1655A0AB68576280
    id: "68576280"
    state: present
  when: install_nodejs == "yes" and nodejs_repo == "nodesource"

- name: Add ppa repo for nodejs
  apt_repository: repo="deb https://deb.nodesource.com/{{ nodesource_nodejs_version }} {{ ansible_distribution_release }} main"
  register: nodejs_repo_r
  when: install_nodejs == "yes" and nodejs_repo == "nodesource"

- name: Update apt cache for nodejs repo
  apt: update_cache=yes
  when: install_nodejs == "yes" and nodejs_repo == "nodesource" and nodejs_repo_r.changed

- set_fact:
    python_psycopg2_package: "python-psycopg2"
  when: ansible_distribution_major_version|int < 22

- set_fact:
    python_psycopg2_package: "python3-psycopg2"
  when: ansible_distribution_major_version|int >= 22

- set_fact:
    python_openssl_package: "python-openssl"
    python_virtualenv_package: "python-virtualenv"
  when: ansible_distribution_major_version|int < 20

- set_fact:
    python_openssl_package: "python3-openssl"
    python_virtualenv_package: "python3-virtualenv"
  when: ansible_distribution_major_version|int >= 20

- name: Install general-purpose packages
  apt:
    pkg:
    - acl
    - apache2
    - aptitude
    - build-essential
    - certbot
    - pkg-config
    - postfix
    - redis-server
# Add TLS to rsyslog for communicating with Papertrail or other log service.
    - rsyslog-gnutls
    - ufw
    - unzip
    - "{{ python_openssl_package }}"
  notify: restart system httpd

- name: Install native application support packages
  apt:
    pkg:
    - git
    - libpq-dev
    - "{{ python_virtualenv_package }}"
    - python3-dev
  when: application_mode == "native"

- name: Install Docker application support packages
  apt:
    pkg:
      - python3-docker
      - python3-pip
  when: application_mode == "docker"

- name: Install project-specific packages
  apt: name="{{ extra_system_packages }}" state=present

- name: Remove project-specific packages
  apt: name="{{ system_packages_to_remove }}" state=absent

- name: Install Node package
  apt: name=nodejs state=present
  when: install_nodejs == "yes"

- name: Install NPM package
  apt: name=npm state=present
  when: install_npm == "yes"

- name: Install PostgreSQL packages
  apt:
    pkg:
      - postgresql
      # The system python-psycopg2 package is used by Ansible; the Django app uses psycopg2 from its virtualenv.
      - "{{ python_psycopg2_package }}"
  when: install_postgres == "yes"

- name: Purge apticron if it is installed.
  apt: name=apticron state=absent purge=yes

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: application_mode == "docker"

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu jammy stable
    state: present
  when: application_mode == "docker"

- name: Update apt and install docker-ce
  apt:
    name: docker-ce
    state: latest
    update_cache: true
  when: application_mode == "docker"

- name: Install AWS CLI
  snap:
    name: aws-cli
    classic: true
    state: present
  when: application_mode == "docker" and ansible_distribution_major_version|int >= 24

- name: Install AWS CLI
  pip:
    name: awscli
  when: application_mode == "docker" and ansible_distribution_major_version|int < 24
